.386
STOCK SEGMENT BYTE USE16
	DB 2048 DUP (?)
STOCK ENDS

DATA SEGMENT BYTE PUBLIC USE16
	F   DB '..\files\FONT.DAT',0
	F2  DB 'SCR-SIN.DAT',0
	FONT	DB 60416 DUP (?) ;*** WZORY FONTOW OD 32 DO 90 WL.
	SIN	DB 200 DUP (?)
	TEKST	DB '	   PRESS ESC KEY !   REXER	 @' ;*** TEKST
	WPL	DW 0 ;*** POZ W TEKS AKT. ZNIKAJACEJ LITERY ( 0.. );
	WLL	DW 0 ;*** NR.NASTEPNEJ LINII DO UZUPELNIENIA Z LITERY NA EKRAN.
	PS  DW 0 ;*** PRZES W SIN !!!
	CZY DB 0 ;*** CZY ZNMIOEN PS
DATA ENDS

CODE SEGMENT BYTE PUBLIC USE16
	ASSUME CS:CODE,DS:DATA,SS:STOCK
START:
	CLD
	MOV	AX,0A000H
	MOV	ES,AX
	PUSH	DATA
	POP	DS
	MOV	DX,OFFSET F ;*** OTWORZ FONT.DAT
	MOV	AL,0
	MOV	AH,3DH
	INT	21H
	MOV	BX,AX
	MOV	AH,3FH	;*** ODCZYTAJ 32*32*59 BAJTOW W KODZIE POZIOMYM
	MOV	CX,60416
	MOV	DX,OFFSET FONT
	INT	21H
	MOV	AH,3EH	    ;*** ZAMKNIJ PLIK FONT.DAT
	INT	21H
	MOV	DX,OFFSET F2 ;*** PLIK SINUSOIDY SIN.DAT
	XOR	AL,AL
	MOV	AH,3DH
	INT	21H
	MOV	BX,AX
	MOV	AH,3FH	; *** 200 OFFSETOW
	MOV	CX,200
	MOV	DX,OFFSET SIN
	INT	21H
	MOV	AH,3EH
	INT	21H
	MOV	AX,13H ;*** TRYB GRAFICZNY (#) (320X200X256C)
	INT	10H
	MOV CX,1
	MOV DX,3C8H
	MOV	BX,0
L000:
	MOV AL,CL
	OUT DX,AL
	INC DX
	MOV AL,0
	OUT DX,AL
	MOV AL,0
	OUT DX,AL
	MOV AL,BL
	OUT DX,AL
	DEC DX
	ADD BX,5
	INC CX
	CMP CX,256
	JB  L000
PETLA:	CALL	SCROLL	;*** WOLAMY PROCEDURY KROKOW ANIMACJI
	MOV CX,32000
	NIC: LOOP NIC
		IN  AL,60H
		CMP AL,1
		JNE L004
	KONIEC: STI
		MOV AX,0003H
		INT 10H
		MOV AX,4C00H
		INT 21H
	L004:	MOV	CX,1

	XTIMES: MOV AX,PS
		CMP AX,0
	JZ  ZERO
		DEC	AX
		MOV PS,AX
	JMP L005
	ZERO:	MOV	AX,199
		MOV PS,AX
	L005:	LOOP	XTIMES
		MOV	BX,WPL
		CMP	TEKST[BX+7],64
JNZ PETLA    ;*** GDY JESZCZE NIE WSZYSTKIE LITERY WYSWIETLILISMY I KONIEC DEMA.
	MOV BX,0
	MOV WPL,BX
JMP PETLA

;***********************
;*	PROCEDURY :    *
;***********************

SCROLL PROC
	MOV BX,WPL
	MOV BP,WLL
	XOR	CX,CX
P1:	MOV	DL,TEKST[BX]
		SUB DL,32
		XOR	DH,DH
		MOV	AX,1024
		MUL	DX
		MOV	DI,AX
		LEA SI,FONT[DI]
		MOV	DX,BP
		MOV	AX,32
		MUL DX
		ADD	SI,AX
		MOV	AX,CX
		MOV	DX,320
		MUL DX
		MOV DI,CX
		ADD DI,PS
		CMP	DI,199
		JB  OK
		SUB	DI,199
	OK: XOR     DH,DH
		MOV	DL,SIN[DI]
		ADD AX,DX
		MOV DI,AX
		PUSH	CX
		MOV	CX,16
		REP MOVSW
		POP	CX
		CMP BP,31
	JNZ INCR
		XOR	BP,BP
		INC	BX
	INCR:	INC	BP
		INC	CX
		CMP CX,200
JNZ	P1
	CMP	WLL,31
JNZ	INCR2
	XOR	AX,AX
	MOV WLL,AX
	INC WPL
INCR2:	INC WLL
	RET
SCROLL ENDP

CODE ENDS
	END START
