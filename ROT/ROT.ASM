CODE SEGMENT PARA PUBLIC 'CODE'
	ASSUME	CS:CODE,DS:DATAS,SS:STOSIK
JMP START
	CUT	DB 66,22,47,15,46,4,35,69,27,0,32,42,16,14,34,38,49,71,57
			DB 64,28,29,44,21,20,24,11,25,74,30,52,73,40,70,67,61,9,31
			DB 1,26,72,18,8,17,33,68,48,37,23,59,63,58,19,7,2,36,12,53
			DB 56,60,10,39,62,43,41,3,5,13,50,6,54,51,65,45,55,0,0,0,0
START:
	MOV AX,0013H
	INT 10H
	MOV AX,DATAS
	MOV DS,AX

	MOV AX,3D00H
	MOV DX,OFFSET FNAME
	INT 21H
	MOV BX,AX
	MOV AH,3FH
	MOV CX,765
	MOV DX,OFFSET BUF
	INT 21H
	MOV CX,1
	MOV DI,OFFSET BUF
	MOV DX,3C8H
L000:
	MOV AL,CL
	OUT DX,AL
	INC DX
	MOV AL,[DI]
	OUT DX,AL
	MOV AL,[DI+1]
	OUT DX,AL
	MOV AL,[DI+2]
	OUT DX,AL
	DEC DX
	ADD DI,3
	INC CX
	CMP CX,256
	JB  L000
	MOV AX,0A000H
	MOV ES,AX
	MOV AH,3FH
	MOV CX,64000
	MOV DX,OFFSET FNAME
	INT 21H

	MOV DX,3D4H
	MOV AL,0DH
	MOV AH,2
	OUT DX,AX


	MOV DX,0
	XOR AH,AH
L004:
	MOV SI,OFFSET FNAME
	MOV DI,0
	MOV BX,DX
L005:
	PUSH	DI
	MOV AL,0
	ADD DI,AX
	MOV CX,320
	REP MOVSB
	POP DI
	ADD DI,320
	INC BX
	CMP BX,146
	JB  L001
	MOV BX,1
L001:
	CMP DI,64000
	JB  L005

	INC DX
	CMP DX,147
	JB  LLL
	MOV DX,1

	CLD
LLL: MOV AX,0A000H
	MOV ES,AX
	MOV CX,0
	XOR BP,BP
L01:
	MOV AX,320
	MUL CX
	MOV SI,AX
	XOR BX,BX
L02:
	MOV AL,ES:[SI][BX]
	MOV DS:[BP],AL
	INC BP
	INC BX
	CMP BX,100
JNZ L02

	INC CX
	CMP CX,100
JNZ L01

	MOV AX,0A000H
	MOV ES,AX
	XOR AX,AX
	MOV BX,0
L03:
	MOV ES:[BX],AL
	INC BX
	CMP BX,64000
JNE L03

	MOV AX,0A000H
	MOV ES,AX

	MOV CX,50
	XOR BP,BP
L04:
	MOV AX,320
	MUL CX
	MOV SI,AX
	ADD SI,120
	XOR BX,BX
L05:
	MOV AL,DS:[BP]
	MOV ES:[SI][BX],AL
	INC BP
	INC BX
	CMP BX,100
JNZ L05

	INC CX
	CMP CX,150
JNZ L04
	mov ah,1
	int 21h
	IN  AL,60H

	MOV AX,DATAS
	MOV DS,AX
MAIN:

	MOV BX,0
	MOV AX,0A000H
	MOV ES,AX
LMAIN:
	IN  AL,60H
	CMP AL,1
JE QUIT_M	;****  ESCAPE ****
	PUSH DS
	PUSH BX
	MOV AL,CS:CUT[BX]
	XOR BH,BH
	MOV BL,AL
	MOV AX,0A000H
	MOV DS,AX
;*************** LEFT *****************

	MOV BP,175
LL0:
	MOV AX,320
	MUL BP
	MOV SI,AX
	ADD SI,95
	MOV DI,SI
	ADD DI,320
	MOV CX,BX
	REP MOVSB
	DEC BP
	CMP BP,25
JNZ LL0

;*************** RIGHT *****************
	MOV BP,25
LP:
	MOV AX,320
	MUL BP
	MOV DI,AX
	MOV SI,AX
	ADD SI,320
	ADD DI,170
	ADD SI,170
	MOV CX,75
	SUB CX,BX
	ADD DI,CX
	ADD SI,CX
	MOV CX,BX
	REP MOVSB
	INC BP
	CMP BP,175
JNE LP

	JMP NNOT
QUIT_M: JMP QUIT
MAIN_M: JMP MAIN
LMAIN_M: JMP LMAIN
	NNOT:
;*************** TOP *****************
	MOV BP,75
	SUB BP,BX
	ADD BP,24
LTOP:
	MOV AX,320
	MUL BP
	MOV DI,AX
	ADD DI,95
	MOV SI,DI
	INC SI
	MOV CX,150
	REP MOVSB
	INC BP
	CMP BP,100
	JNZ LTOP
;*************** BOTTOM *****************
	STD
	MOV BP,100
LBOT:
	MOV AX,320
	MUL BP
	MOV DI,AX
	ADD DI,240
	MOV SI,DI
	DEC SI
	MOV CX,160
	REP MOVSB
	INC BP
	MOV AX,101
	ADD AX,BX
	CMP BP,AX
	JNE LBOT
	CLD
; ************ CLOSE **************
	POP BX
	POP DS
	INC BX
	CMP BX,75
JNZ LMAIN_M
	XOR BX,BX

JMP MAIN_M

QUIT:
	mov ah,1
	int 21h

	STI

	MOV AX,0003H
	INT 10H
	MOV AX,4C00H
	INT 21H

CODE	ENDS

STOSIK SEGMENT PARA STACK 'STACK'
	DB 2048 DUP (?)
STOSIK ENDS

DATAS SEGMENT PARA PUBLIC 'DATA'
	POCZ	DW  0
	FNAME	DB  '..\files\cat.ARC',0
	BUF	DB  10000 DUP(0)
DATAS	ENDS
END
